From PLF Require Import Syntax.
Open Scope string_scope.

Example prog_well_typed : exists p, program_well_typed p.
Proof with (simpl;try(reflexivity)).
unfold program_well_typed.
eexists.
eexists.
eapply T_ProgramConcat...
{ eapply T_ImportDecl with(n1:="java.util")(n2:="List")... }
{ eapply T_ProgramConcat...
  { eapply T_ImportDecl with(n1:="java.util")(n2:="Queue")... }
  { eapply T_ProgramConcat...
    { eapply T_ImportDecl with(n1:="java.util")(n2:="LinkedList")... }
    { eapply T_ProgramConcat...
      { eapply T_ClassDecl with(name:="State")...
        eapply T_ComponentConcat...
        { eapply T_FieldDeclNoInit with(modif:="")(T:=TyInt)(x:="row")... }
        { eapply T_ComponentConcat...
          { eapply T_FieldDeclNoInit with(modif:="")(T:=TyInt)(x:="col")... }
          { eapply T_ComponentConcat...
            { eapply T_FieldDeclNoInit with(modif:="")(T:=TyInt)(x:="steps")... }
            { eapply T_ConstructorDecl...
              { eapply T_Concat...
                { eapply T_DeclNoInit with(T:=TyInt)(x:="row")... }
                { eapply T_Concat...
                  { eapply T_DeclNoInit with(T:=TyInt)(x:="col")... }
                  { eapply T_Concat...
                    { eapply T_DeclNoInit with(T:=TyInt)(x:="steps")... }
                    { eapply T_Skip... } } } }
              { eapply T_Concat...
                { eapply T_Expression...
                  eapply T_Assign...
                  { eapply T_FieldAccess' with(f:="row")...
                    eapply T_Var with(x:="this")... }
                  { eapply T_Var with(x:="row")... } }
                { eapply T_Concat...
                  { eapply T_Expression...
                    eapply T_Assign...
                    { eapply T_FieldAccess' with(f:="col")...
                      eapply T_Var with(x:="this")... }
                    { eapply T_Var with(x:="col")... } }
                  { eapply T_Concat...
                    { eapply T_Expression...
                      eapply T_Assign...
                      { eapply T_FieldAccess' with(f:="steps")...
                        eapply T_Var with(x:="this")... }
                      { eapply T_Var with(x:="steps")... } }
                    { eapply T_Skip... } } } } } } } }
      { eapply T_ClassDecl with(name:="Solution")...
        eapply T_ComponentConcat...
        { eapply T_FieldDeclNoInit with(modif:="")(T:=TyInt)(x:="m")... }
        { eapply T_ComponentConcat...
          { eapply T_FieldDeclNoInit with(modif:="")(T:=TyInt)(x:="n")... }
          { eapply T_ComponentConcat...
            { eapply T_FieldDeclInit with(modif:="")(T:=(TyArray (TyArray TyInt)))(x:="directions")...
              eapply T_NewArrayInit with(T:=(TyArray (TyArray TyInt)))...
              eapply T_ArrayConcat...
              { eapply T_ArrayConcat...
                { eapply T_Integer with(n:=0)... }
                { eapply T_ArrayConcat...
                  { eapply T_Integer with(n:=1)... }
                  { eapply T_EmptyArray... } } }
              { eapply T_ArrayConcat...
                { eapply T_ArrayConcat...
                  { eapply T_Integer with(n:=1)... }
                  { eapply T_ArrayConcat...
                    { eapply T_Integer with(n:=0)... }
                    { eapply T_EmptyArray... } } }
                { eapply T_ArrayConcat...
                  { eapply T_ArrayConcat...
                    { eapply T_Integer with(n:=0)... }
                    { eapply T_ArrayConcat...
                      { eapply T_Neg...
                        eapply T_Integer with(n:=1)... }
                      { eapply T_EmptyArray... } } }
                  { eapply T_ArrayConcat...
                    { eapply T_ArrayConcat...
                      { eapply T_Neg...
                        eapply T_Integer with(n:=1)... }
                      { eapply T_ArrayConcat...
                        { eapply T_Integer with(n:=0)... }
                        { eapply T_EmptyArray... } } }
                    { eapply T_EmptyArray... } } } } }
            { eapply T_ComponentConcat...
              { eapply T_MethodDecl with(modif:="public")(T:=TyBool)(m:="valid")...
                { eapply T_Concat...
                  { eapply T_DeclNoInit with(T:=TyInt)(x:="row")... }
                  { eapply T_Concat...
                    { eapply T_DeclNoInit with(T:=TyInt)(x:="col")... }
                    { eapply T_Skip... } } }
                { eapply T_Concat...
                  { eapply T_Return...
                    eapply T_And...
                    { eapply T_And...
                      { eapply T_And...
                        { eapply T_Le...
                          { eapply T_Integer with(n:=0)... }
                          { eapply T_Var with(x:="row")... } }
                        { eapply T_Lt...
                          { eapply T_Var with(x:="row")... }
                          { eapply T_Var with(x:="m")... } } }
                      { eapply T_Le...
                        { eapply T_Integer with(n:=0)... }
                        { eapply T_Var with(x:="col")... } } }
                    { eapply T_Lt...
                      { eapply T_Var with(x:="col")... }
                      { eapply T_Var with(x:="n")... } } }
                  { eapply T_Skip... } } }
              { eapply T_MethodDecl with(modif:="public")(T:=(TyArray (TyArray TyInt)))(m:="updateMatrix")...
                { eapply T_Concat...
                  { eapply T_DeclNoInit with(T:=(TyArray (TyArray TyInt)))(x:="mat")... }
                  { eapply T_Skip... } }
                { eapply T_Concat...
                  { eapply T_Expression...
                    eapply T_Assign...
                    { eapply T_Var with(x:="m")... }
                    { eapply T_FieldAccess' with(f:="length")...
                      eapply T_Var with(x:="mat")... } }
                  { eapply T_Concat...
                    { eapply T_Expression...
                      eapply T_Assign...
                      { eapply T_Var with(x:="n")... }
                      { eapply T_FieldAccess' with(f:="length")...
                        eapply T_ArrayAccess...
                        { eapply T_Var with(x:="mat")... }
                        { eapply T_Integer with(n:=0)... } } }
                    { eapply T_Concat...
                      { eapply T_Concat...
                        { eapply T_DeclInit with(T:=(TyArray (TyArray TyInt)))(x:="matrix")...
                          eapply T_NewArrayNoInit' with(T:=TyInt)...
                          { eapply T_Var with(x:="m")... }
                          { eapply T_NewArrayNoInit' with(T:=TyInt)...
                            { eapply T_Var with(x:="n")... }
                            { eapply T_NewArrayNoInit with(T:=TyInt)... } } }
                        { eapply T_Skip... } }
                      { eapply T_Concat...
                        { eapply T_Concat...
                          { eapply T_DeclInit with(T:=(TyArray (TyArray TyBool)))(x:="seen")...
                            eapply T_NewArrayNoInit' with(T:=TyBool)...
                            { eapply T_Var with(x:="m")... }
                            { eapply T_NewArrayNoInit' with(T:=TyBool)...
                              { eapply T_Var with(x:="n")... }
                              { eapply T_NewArrayNoInit with(T:=TyBool)... } } }
                          { eapply T_Skip... } }
                        { eapply T_Concat...
                          { eapply T_Concat...
                            { eapply T_DeclInit with(T:=(TyGeneric1 "Queue" (TyExternal "State")))(x:="queue")...
                              eapply T_New' with(T:=(TyGeneric0 "LinkedList"))...
                              eapply T_Nil... }
                            { eapply T_Skip... } }
                          { eapply T_Concat...
                            { eapply T_For...
                              { eapply T_Concat...
                                { eapply T_DeclInit with(T:=TyInt)(x:="row")...
                                  eapply T_Integer with(n:=0)... }
                                { eapply T_Skip... } }
                              { eapply T_Lt...
                                { eapply T_Var with(x:="row")... }
                                { eapply T_Var with(x:="m")... } }
                              { eapply T_PostInc...
                                eapply T_Var with(x:="row")... }
                              { eapply T_Concat...
                                { eapply T_For...
                                  { eapply T_Concat...
                                    { eapply T_DeclInit with(T:=TyInt)(x:="col")...
                                      eapply T_Integer with(n:=0)... }
                                    { eapply T_Skip... } }
                                  { eapply T_Lt...
                                    { eapply T_Var with(x:="col")... }
                                    { eapply T_Var with(x:="n")... } }
                                  { eapply T_PostInc...
                                    eapply T_Var with(x:="col")... }
                                  { eapply T_Concat...
                                    { eapply T_Expression...
                                      eapply T_Assign...
                                      { eapply T_ArrayAccess...
                                        { eapply T_ArrayAccess...
                                          { eapply T_Var with(x:="matrix")... }
                                          { eapply T_Var with(x:="row")... } }
                                        { eapply T_Var with(x:="col")... } }
                                      { eapply T_ArrayAccess...
                                        { eapply T_ArrayAccess...
                                          { eapply T_Var with(x:="mat")... }
                                          { eapply T_Var with(x:="row")... } }
                                        { eapply T_Var with(x:="col")... } } }
                                    { eapply T_Concat...
                                      { eapply T_If...
                                        { eapply T_Eq...
                                          { eapply T_ArrayAccess...
                                            { eapply T_ArrayAccess...
                                              { eapply T_Var with(x:="mat")... }
                                              { eapply T_Var with(x:="row")... } }
                                            { eapply T_Var with(x:="col")... } }
                                          { eapply T_Integer with(n:=0)... } }
                                        { eapply T_Concat...
                                          { eapply T_Expression...
                                            eapply T_MethodInvocation' with(m:="add")...
                                            { eapply T_Var with(x:="queue")... }
                                            { eapply T_List...
                                              { eapply T_New' with(T:=(TyExternal "State"))...
                                                eapply T_List...
                                                { eapply T_Var with(x:="row")... }
                                                { eapply T_List...
                                                  { eapply T_Var with(x:="col")... }
                                                  { eapply T_List...
                                                    { eapply T_Integer with(n:=0)... }
                                                    { eapply T_Nil... } } } }
                                              { eapply T_Nil... } } }
                                          { eapply T_Concat...
                                            { eapply T_Expression...
                                              eapply T_Assign...
                                              { eapply T_ArrayAccess...
                                                { eapply T_ArrayAccess...
                                                  { eapply T_Var with(x:="seen")... }
                                                  { eapply T_Var with(x:="row")... } }
                                                { eapply T_Var with(x:="col")... } }
                                              { eapply T_True... } }
                                            { eapply T_Skip... } } } }
                                      { eapply T_Skip... } } } }
                                { eapply T_Skip... } } }
                            { eapply T_Concat...
                              { eapply T_While...
                                { eapply T_Not...
                                  eapply T_MethodInvocation' with(m:="isEmpty")...
                                  { eapply T_Var with(x:="queue")... }
                                  { eapply T_Nil... } }
                                { eapply T_Concat...
                                  { eapply T_Concat...
                                    { eapply T_DeclInit with(T:=(TyExternal "State"))(x:="state")...
                                      eapply T_MethodInvocation' with(m:="remove")...
                                      { eapply T_Var with(x:="queue")... }
                                      { eapply T_Nil... } }
                                    { eapply T_Skip... } }
                                  { eapply T_Concat...
                                    { eapply T_Concat...
                                      { eapply T_DeclInit with(T:=TyInt)(x:="row")...
                                        eapply T_FieldAccess' with(f:="row")...
                                        eapply T_Var with(x:="state")... }
                                      { eapply T_Concat...
                                        { eapply T_DeclInit with(T:=TyInt)(x:="col")...
                                          eapply T_FieldAccess' with(f:="col")...
                                          eapply T_Var with(x:="state")... }
                                        { eapply T_Concat...
                                          { eapply T_DeclInit with(T:=TyInt)(x:="steps")...
                                            eapply T_FieldAccess' with(f:="steps")...
                                            eapply T_Var with(x:="state")... }
                                          { eapply T_Skip... } } } }
                                    { eapply T_Concat...
                                      { eapply T_Foreach with(T:=(TyArray TyInt))(x:="direction")...
                                        { eapply T_Var with(x:="directions")... }
                                        { reflexivity. }
                                        { eapply T_Concat...
                                          { eapply T_Concat...
                                            { eapply T_DeclInit with(T:=TyInt)(x:="nextRow")...
                                              eapply T_Add...
                                              { eapply T_Var with(x:="row")... }
                                              { eapply T_ArrayAccess...
                                                { eapply T_Var with(x:="direction")... }
                                                { eapply T_Integer with(n:=0)... } } }
                                            { eapply T_Concat...
                                              { eapply T_DeclInit with(T:=TyInt)(x:="nextCol")...
                                                eapply T_Add...
                                                { eapply T_Var with(x:="col")... }
                                                { eapply T_ArrayAccess...
                                                  { eapply T_Var with(x:="direction")... }
                                                  { eapply T_Integer with(n:=1)... } } }
                                              { eapply T_Skip... } } }
                                          { eapply T_Concat...
                                            { eapply T_If...
                                              { eapply T_And...
                                                { eapply T_MethodInvocationNoObj with(m:="valid")...
                                                  eapply T_List...
                                                  { eapply T_Var with(x:="nextRow")... }
                                                  { eapply T_List...
                                                    { eapply T_Var with(x:="nextCol")... }
                                                    { eapply T_Nil... } } }
                                                { eapply T_Not...
                                                  eapply T_ArrayAccess...
                                                  { eapply T_ArrayAccess...
                                                    { eapply T_Var with(x:="seen")... }
                                                    { eapply T_Var with(x:="nextRow")... } }
                                                  { eapply T_Var with(x:="nextCol")... } } }
                                              { eapply T_Concat...
                                                { eapply T_Expression...
                                                  eapply T_Assign...
                                                  { eapply T_ArrayAccess...
                                                    { eapply T_ArrayAccess...
                                                      { eapply T_Var with(x:="seen")... }
                                                      { eapply T_Var with(x:="nextRow")... } }
                                                    { eapply T_Var with(x:="nextCol")... } }
                                                  { eapply T_True... } }
                                                { eapply T_Concat...
                                                  { eapply T_Expression...
                                                    eapply T_MethodInvocation' with(m:="add")...
                                                    { eapply T_Var with(x:="queue")... }
                                                    { eapply T_List...
                                                      { eapply T_New' with(T:=(TyExternal "State"))...
                                                        eapply T_List...
                                                        { eapply T_Var with(x:="nextRow")... }
                                                        { eapply T_List...
                                                          { eapply T_Var with(x:="nextCol")... }
                                                          { eapply T_List...
                                                            { eapply T_Add...
                                                              { eapply T_Var with(x:="steps")... }
                                                              { eapply T_Integer with(n:=1)... } }
                                                            { eapply T_Nil... } } } }
                                                      { eapply T_Nil... } } }
                                                  { eapply T_Concat...
                                                    { eapply T_Expression...
                                                      eapply T_Assign...
                                                      { eapply T_ArrayAccess...
                                                        { eapply T_ArrayAccess...
                                                          { eapply T_Var with(x:="matrix")... }
                                                          { eapply T_Var with(x:="nextRow")... } }
                                                        { eapply T_Var with(x:="nextCol")... } }
                                                      { eapply T_Add...
                                                        { eapply T_Var with(x:="steps")... }
                                                        { eapply T_Integer with(n:=1)... } } }
                                                    { eapply T_Skip... } } } } }
                                            { eapply T_Skip... } } } }
                                      { eapply T_Skip... } } } } }
                              { eapply T_Concat...
                                { eapply T_Return...
                                  eapply T_Var with(x:="matrix")... }
                                { eapply T_Skip... } } } } } } } } } } } } } } } } }
  Unshelve.
  all: apply STyVoid.
Defined.
Definition prog := the_exists_term (prog_well_typed).
Print prog.